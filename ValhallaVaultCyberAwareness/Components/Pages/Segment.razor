@page "/Segment/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using ValhallaVaultCyberAwareness.Models
@using ValhallaVaultCyberAwareness.Repository
@inject ValhallaUow uow
@* @attribute [Authorize] *@

@if (ChosenCategory == null)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
        <h1 class="text-white">Loading...</h1>
    </div>
}
else
{
    <div class="container text-white" >
        <h1 class="text-center">@ChosenCategory.Name</h1>

        @foreach (var segment in Segments)
        {
            <div class="card mb-4 text-light bg-dark text-">
                <div class="card-body">
                    <h2>@segment.Name</h2>
                    <p class="mb-2">Some Information About This Segment:</p>
                    <h3>@segment.InfoText</h3>
                    <p class="mb-2">The questions in this segment are:</p>
                    <ul>
                        @foreach (var question in segment.Questions)
                        {
                            <li><a href="/question/@question.Id">@question.Title</a></li>
                        }
                    </ul>             
                </div>
            </div>
        }
    </div>
}


@code {
    [Parameter]
    public int Id { get; set; }
    public SegmentModel? ChosenSegment { get; set; }
    public CategoryModel? ChosenCategory { get; set; }
    public List<SegmentModel>? Segments { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        ChosenSegment = await uow.SegmentRepo.GetByIdAsync(Id);
        ChosenCategory = await uow.CategoryRepo.GetByIdAsync(ChosenSegment.CategoryId);
        Segments = await uow.SegmentRepo.GetSegmentsInCategoryAsync(ChosenSegment.CategoryId);
    }
}
