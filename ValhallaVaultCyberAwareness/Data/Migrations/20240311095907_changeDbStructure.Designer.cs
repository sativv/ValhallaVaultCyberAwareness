// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValhallaVaultCyberAwareness.Data;

#nullable disable

namespace ValhallaVaultCyberAwareness.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240311095907_changeDbStructure")]
    partial class changeDbStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.AnswerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCorrectAnswer = false,
                            QuestionId = 1,
                            Text = "Ett legitimt försök från banken att skydda ditt konto"
                        },
                        new
                        {
                            Id = 2,
                            IsCorrectAnswer = false,
                            QuestionId = 1,
                            Text = "En informationsinsamling för en marknadsundersökning"
                        },
                        new
                        {
                            Id = 3,
                            IsCorrectAnswer = true,
                            QuestionId = 1,
                            Text = "Ett potentiellt telefonbedrägeri"
                        },
                        new
                        {
                            Id = 4,
                            IsCorrectAnswer = false,
                            QuestionId = 2,
                            Text = "En legitim begäran om hjälp från en person i nöd"
                        },
                        new
                        {
                            Id = 5,
                            IsCorrectAnswer = true,
                            QuestionId = 2,
                            Text = "Ett romansbedrägeri"
                        },
                        new
                        {
                            Id = 6,
                            IsCorrectAnswer = false,
                            QuestionId = 2,
                            Text = "En tillfällig ekonomisk svårighet"
                        },
                        new
                        {
                            Id = 7,
                            IsCorrectAnswer = false,
                            QuestionId = 3,
                            Text = "Genomföra omedelbar investering för att inte missa möjligheten"
                        },
                        new
                        {
                            Id = 8,
                            IsCorrectAnswer = true,
                            QuestionId = 3,
                            Text = "Investeringsbedrägeri"
                        },
                        new
                        {
                            Id = 9,
                            IsCorrectAnswer = false,
                            QuestionId = 3,
                            Text = "Begära mer information för att utföra en noggrann ‘’due diligence’’"
                        },
                        new
                        {
                            Id = 10,
                            IsCorrectAnswer = false,
                            QuestionId = 4,
                            Text = "Ett misstag av kreditkortsföretaget"
                        },
                        new
                        {
                            Id = 11,
                            IsCorrectAnswer = true,
                            QuestionId = 4,
                            Text = "Kreditkortsbedrägeri"
                        },
                        new
                        {
                            Id = 12,
                            IsCorrectAnswer = false,
                            QuestionId = 4,
                            Text = "Obehöriga köp av en familjemedlem"
                        },
                        new
                        {
                            Id = 13,
                            IsCorrectAnswer = true,
                            QuestionId = 5,
                            Text = "Utbildning i digital säkerhet för alla anställda"
                        },
                        new
                        {
                            Id = 14,
                            IsCorrectAnswer = false,
                            QuestionId = 5,
                            Text = "Installera en starkare brandvägg"
                        },
                        new
                        {
                            Id = 15,
                            IsCorrectAnswer = false,
                            QuestionId = 5,
                            Text = " Byta ut all IT-utrustning"
                        },
                        new
                        {
                            Id = 16,
                            IsCorrectAnswer = true,
                            QuestionId = 6,
                            Text = " Informera alla användare om sårbarheten och rekommendera temporära skyddsåtgärder"
                        },
                        new
                        {
                            Id = 17,
                            IsCorrectAnswer = false,
                            QuestionId = 6,
                            Text = "Ignorera problemet tills en patch kan utvecklas"
                        },
                        new
                        {
                            Id = 18,
                            IsCorrectAnswer = false,
                            QuestionId = 6,
                            Text = "Stänga ner tjänsten tillfälligt"
                        },
                        new
                        {
                            Id = 19,
                            IsCorrectAnswer = false,
                            QuestionId = 7,
                            Text = "En enskild hackare med ett personligt vendetta"
                        },
                        new
                        {
                            Id = 20,
                            IsCorrectAnswer = false,
                            QuestionId = 7,
                            Text = "En konkurrerande företagsentitet"
                        },
                        new
                        {
                            Id = 21,
                            IsCorrectAnswer = true,
                            QuestionId = 7,
                            Text = "Organiserade cyberbrottsliga grupper"
                        },
                        new
                        {
                            Id = 22,
                            IsCorrectAnswer = false,
                            QuestionId = 8,
                            Text = "Återgå till kontorsarbete"
                        },
                        new
                        {
                            Id = 23,
                            IsCorrectAnswer = true,
                            QuestionId = 8,
                            Text = "Införa striktare lösenordspolicyer och tvåfaktorsautentisering för fjärråtkomst"
                        },
                        new
                        {
                            Id = 24,
                            IsCorrectAnswer = false,
                            QuestionId = 8,
                            Text = "Förbjuda användning av personliga enheter för arbete"
                        },
                        new
                        {
                            Id = 25,
                            IsCorrectAnswer = false,
                            QuestionId = 9,
                            Text = "Phishing"
                        },
                        new
                        {
                            Id = 26,
                            IsCorrectAnswer = true,
                            QuestionId = 9,
                            Text = "Ransomware"
                        },
                        new
                        {
                            Id = 27,
                            IsCorrectAnswer = false,
                            QuestionId = 9,
                            Text = "Spyware"
                        },
                        new
                        {
                            Id = 28,
                            IsCorrectAnswer = false,
                            QuestionId = 10,
                            Text = "Spyware"
                        },
                        new
                        {
                            Id = 29,
                            IsCorrectAnswer = true,
                            QuestionId = 10,
                            Text = "Ransomware"
                        },
                        new
                        {
                            Id = 30,
                            IsCorrectAnswer = false,
                            QuestionId = 10,
                            Text = "Adware"
                        },
                        new
                        {
                            Id = 31,
                            IsCorrectAnswer = false,
                            QuestionId = 11,
                            Text = "Cyberkriminalitet"
                        },
                        new
                        {
                            Id = 32,
                            IsCorrectAnswer = true,
                            QuestionId = 11,
                            Text = "Cyberspionage"
                        },
                        new
                        {
                            Id = 33,
                            IsCorrectAnswer = false,
                            QuestionId = 11,
                            Text = "Cyberterrorism"
                        },
                        new
                        {
                            Id = 34,
                            IsCorrectAnswer = false,
                            QuestionId = 12,
                            Text = "Social ingenjörskonst"
                        },
                        new
                        {
                            Id = 35,
                            IsCorrectAnswer = false,
                            QuestionId = 12,
                            Text = "Massövervakning"
                        },
                        new
                        {
                            Id = 36,
                            IsCorrectAnswer = true,
                            QuestionId = 12,
                            Text = "Riktade cyberattacker"
                        },
                        new
                        {
                            Id = 37,
                            IsCorrectAnswer = false,
                            QuestionId = 13,
                            Text = "GDPR"
                        },
                        new
                        {
                            Id = 38,
                            IsCorrectAnswer = true,
                            QuestionId = 13,
                            Text = "Säkerhetsskyddslagen"
                        },
                        new
                        {
                            Id = 39,
                            IsCorrectAnswer = false,
                            QuestionId = 13,
                            Text = "IT-säkerhetslagen"
                        },
                        new
                        {
                            Id = 40,
                            IsCorrectAnswer = false,
                            QuestionId = 14,
                            Text = "Oberoende hackare"
                        },
                        new
                        {
                            Id = 41,
                            IsCorrectAnswer = false,
                            QuestionId = 14,
                            Text = "Aktivistgrupper"
                        },
                        new
                        {
                            Id = 42,
                            IsCorrectAnswer = true,
                            QuestionId = 14,
                            Text = "Statssponsrade hackers"
                        },
                        new
                        {
                            Id = 43,
                            IsCorrectAnswer = false,
                            QuestionId = 15,
                            Text = "Ge dem informationen de ber om, för säkerhets skull"
                        },
                        new
                        {
                            Id = 44,
                            IsCorrectAnswer = true,
                            QuestionId = 15,
                            Text = "Avsluta samtalet och kontakta din bank direkt via ett officiellt nummer du vet är korrekt"
                        },
                        new
                        {
                            Id = 45,
                            IsCorrectAnswer = false,
                            QuestionId = 15,
                            Text = "Vänta på att de ska ringa tillbaka för att bekräfta deras legitimitet"
                        },
                        new
                        {
                            Id = 46,
                            IsCorrectAnswer = false,
                            QuestionId = 16,
                            Text = "Banker skickar ofta e-postmeddelanden som ber kunder att direkt ange lösenord och kontonummer för verifiering."
                        },
                        new
                        {
                            Id = 47,
                            IsCorrectAnswer = false,
                            QuestionId = 16,
                            Text = "Banker ringer regelbundet sina kunder för att be dem upprepa sina kontouppgifter för säkerhetsuppdateringar."
                        },
                        new
                        {
                            Id = 48,
                            IsCorrectAnswer = true,
                            QuestionId = 16,
                            Text = "Banker och finansiella institutioner kommer aldrig att be dig om ditt lösenord eller kontonummer via telefon eller e-post."
                        },
                        new
                        {
                            Id = 49,
                            IsCorrectAnswer = false,
                            QuestionId = 17,
                            Text = "Installera en app som blockerar misstänkta samtal"
                        },
                        new
                        {
                            Id = 50,
                            IsCorrectAnswer = false,
                            QuestionId = 17,
                            Text = "Aldrig svara på samtal från okända nummer"
                        },
                        new
                        {
                            Id = 51,
                            IsCorrectAnswer = true,
                            QuestionId = 17,
                            Text = "Upprätta starka säkerhetsfrågor med din bank som krävs för att identifiera dig över telefon"
                        },
                        new
                        {
                            Id = 52,
                            IsCorrectAnswer = false,
                            QuestionId = 18,
                            Text = "Manuellt kontrollera varje anställds lösenord en gång per år"
                        },
                        new
                        {
                            Id = 53,
                            IsCorrectAnswer = true,
                            QuestionId = 18,
                            Text = "Implementera en policy för lösenordskomplexitet som kräver automatiska lösenordsändringar var 90:e dag"
                        },
                        new
                        {
                            Id = 54,
                            IsCorrectAnswer = false,
                            QuestionId = 18,
                            Text = "Uppmana anställda att välja lättihågda lösenord för att undvika att skriva ner dem"
                        },
                        new
                        {
                            Id = 55,
                            IsCorrectAnswer = false,
                            QuestionId = 19,
                            Text = "Förbjuda användning av offentliga Wi-Fi-nätverk helt och hållet"
                        },
                        new
                        {
                            Id = 56,
                            IsCorrectAnswer = true,
                            QuestionId = 19,
                            Text = "Utrusta alla anställdas enheter med VPN (Virtual Private Network)-tjänster"
                        },
                        new
                        {
                            Id = 57,
                            IsCorrectAnswer = false,
                            QuestionId = 19,
                            Text = "Endast tillåta anställda att arbeta offline när de inte är på kontoret"
                        },
                        new
                        {
                            Id = 58,
                            IsCorrectAnswer = false,
                            QuestionId = 20,
                            Text = "Blockera all inkommande e-post från externa källor"
                        },
                        new
                        {
                            Id = 59,
                            IsCorrectAnswer = true,
                            QuestionId = 20,
                            Text = "Installera och uppdatera regelbundet e-postsäkerhetslösningar som filtrerar bort skadlig programvara och misstänkta länkar"
                        },
                        new
                        {
                            Id = 60,
                            IsCorrectAnswer = false,
                            QuestionId = 20,
                            Text = "Låta anställda använda personliga e-postkonton för arbete för att minska risken för företagets e-postservers säkerhet"
                        },
                        new
                        {
                            Id = 61,
                            IsCorrectAnswer = true,
                            QuestionId = 21,
                            Text = "Öka användningen av kryptering för all intern och extern kommunikation"
                        },
                        new
                        {
                            Id = 62,
                            IsCorrectAnswer = false,
                            QuestionId = 21,
                            Text = "Förbjuda all användning av e-post och återgå till fysisk korrespondens"
                        },
                        new
                        {
                            Id = 63,
                            IsCorrectAnswer = false,
                            QuestionId = 21,
                            Text = "Installera antivirusprogram på alla datorer"
                        },
                        new
                        {
                            Id = 64,
                            IsCorrectAnswer = false,
                            QuestionId = 22,
                            Text = "Genomföra strikta bakgrundskontroller av alla anställda"
                        },
                        new
                        {
                            Id = 65,
                            IsCorrectAnswer = true,
                            QuestionId = 22,
                            Text = "Implementera ett omfattande program för beteendeanalys och anomalidetektering"
                        },
                        new
                        {
                            Id = 66,
                            IsCorrectAnswer = false,
                            QuestionId = 22,
                            Text = "Begränsa internetanvändningen på arbetsplatsen till arbetsrelaterade aktiviteter"
                        },
                        new
                        {
                            Id = 67,
                            IsCorrectAnswer = false,
                            QuestionId = 23,
                            Text = "Genomföra regelbundna medvetenhetsträningar för alla anställda om cybersäkerhet"
                        },
                        new
                        {
                            Id = 68,
                            IsCorrectAnswer = true,
                            QuestionId = 23,
                            Text = "Hålla all mjukvara och operativsystem uppdaterade med de senaste säkerhetspatcharna"
                        },
                        new
                        {
                            Id = 69,
                            IsCorrectAnswer = false,
                            QuestionId = 23,
                            Text = "Endast använda egenutvecklad mjukvara för alla verksamhetsprocesser"
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Att skydda sig mot bedrägerier"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cybersäkerhet för företag"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cyberspionage"
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.QuestionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExplanationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExplanationText = "Banker och andra finansiella institutioner begär aldrig känslig information såsom kontonummer eller lösenord via telefon. Detta är ett klassiskt tecken på telefonbedrägeri.",
                            SubCategoryId = 1,
                            Text = "Du får ett oväntat telefonsamtal från någon som påstår sig vara från din bank. Personen ber dig bekräfta ditt kontonummer och lösenord för att \"säkerställa din kontos säkerhet\" efter en påstådd säkerhetsincident. Hur bör du tolka denna situation?",
                            Title = "Kreditkortsbedrägeri"
                        },
                        new
                        {
                            Id = 2,
                            ExplanationText = "Begäran om pengar, särskilt under omständigheter där två personer aldrig har träffats fysiskt, är ett vanligt tecken på romansbedrägeri.",
                            SubCategoryId = 2,
                            Text = "Efter flera månader av daglig kommunikation med någon du träffade på en datingsida, börjar personen berätta om en plötslig finansiell kris och ber om din hjälp genom att överföra pengar. Vad indikerar detta mest sannolikt?",
                            Title = "Romansbedrägeri"
                        },
                        new
                        {
                            Id = 3,
                            ExplanationText = "Erbjudanden som lovar hög avkastning med liten eller ingen risk, särskilt via oönskade e-postmeddelanden, är ofta tecken på investeringsbedrägerier",
                            SubCategoryId = 3,
                            Text = "Du får ett e-postmeddelande/samtal om ett exklusivt erbjudande att investera i ett startup-företag som påstås ha en revolutionerande ny teknologi, med garantier om exceptionellt hög avkastning på mycket kort tid. Hur bör du förhålla dig till erbjudandet?",
                            Title = "Investeringsbedrägeri"
                        },
                        new
                        {
                            Id = 4,
                            ExplanationText = "Oidentifierade transaktioner på ditt kreditkortsutdrag är en stark indikation på att ditt kortnummer har komprometterats och använts för obehöriga köp, vilket är typiskt för kreditkortsbedrägeri",
                            SubCategoryId = 4,
                            Text = "Efter en online-shoppingrunda märker du oidentifierade transaktioner på ditt kreditkortsutdrag från företag du aldrig handlat från. Vad indikerar detta mest sannolikt?",
                            Title = "Telefonbedrägeri"
                        },
                        new
                        {
                            Id = 5,
                            ExplanationText = "Utbildning i digital säkerhet är avgörande för att hjälpa anställda att känna igen och undvika säkerhetshot som phishing, vilket är en vanlig attackvektor.",
                            SubCategoryId = 12,
                            Text = "Inom företaget märker man att konfidentiella dokument regelbundet läcker ut till konkurrenter. Efter en intern granskning upptäcks det att en anställd omedvetet har installerat skadlig programvara genom att klicka på en länk i ett phishing-e-postmeddelande. Vilken åtgärd bör prioriteras för att förhindra framtida incidenter?",
                            Title = "Digital säkerhet på företag"
                        },
                        new
                        {
                            Id = 6,
                            ExplanationText = "Transparent kommunikation och rådgivning om tillfälliga åtgärder är avgörande för att skydda användarna medan en permanent lösning utvecklas.",
                            SubCategoryId = 13,
                            Text = "Inom företaget upptäckts det en sårbarhet i vår programvara som kunde möjliggöra obehörig åtkomst till användardata. Företaget har inte omedelbart en lösning. Vilken är den mest lämpliga första åtgärden?",
                            Title = "Risker och beredskap"
                        },
                        new
                        {
                            Id = 7,
                            ExplanationText = "DDoS-attacker kräver ofta betydande resurser och koordinering, vilket är karakteristiskt för organiserade cyberbrottsliga grupper.",
                            SubCategoryId = 14,
                            Text = "Vårt företag blir måltavla för en DDoS-attack som överväldigar våra servers och gör våra tjänster otillgängliga för kunder. Vilken typ av aktör är mest sannolikt ansvarig för denna typ av attack?",
                            Title = "Aktörer inom cyberbrott"
                        },
                        new
                        {
                            Id = 8,
                            ExplanationText = " Stärkt autentisering är kritisk för att säkra fjärråtkomst och skydda mot obehörig åtkomst i en distribuerad arbetsmiljö.",
                            SubCategoryId = 15,
                            Text = "Med övergången till distansarbete upptäcker vårt företag en ökning av säkerhetsincidenter, inklusive obehörig åtkomst till företagsdata. Vilken åtgärd bör företaget vidta för att adressera denna nya riskmiljö?",
                            Title = "Ökad digital närvaro och distansarbete"
                        },
                        new
                        {
                            Id = 9,
                            ExplanationText = "Ransomware-angrepp involverar kryptering av offerdata och kräver lösen för dekryptering, vilket är särskilt skadligt för kritiska sektorer som hälsovård.",
                            SubCategoryId = 16,
                            Text = "Hälsovårdsmyndigheten utsätts för ett cyberangrepp som krypterar patientdata och kräver lösen för att återställa åtkomsten. Vilken typ av angrepp har de sannolikt blivit utsatta för?",
                            Title = "Cyberangrepp mot känsliga sektorer"
                        },
                        new
                        {
                            Id = 10,
                            ExplanationText = "Maersk utsattes för NotPetya ransomware-angreppet, som ledde till omfattande störningar och förluster genom att kryptera företagets globala system. Maersk rapporterade att företaget led ekonomiska förluster på grund av NotPetya ransomware-angreppet som uppskattades till cirka 300 miljoner USD. Denna siffra reflekterar de omfattande kostnaderna för störningar i deras globala verksamheter, återställande av system och data, samt förlust av affärer under tiden systemen var nere. NotPetya-angreppet anses vara ett av de mest kostsamma cyberangreppen mot ett enskilt företag och tjänar som en kraftfull påminnelse om de potentiella konsekvenserna av cyberhot.",
                            SubCategoryId = 17,
                            Text = "Det globala fraktbolaget Maersk blev offer för ett omfattande cyberangrepp som avsevärt störde deras verksamhet världen över. Vilken typ av malware var primärt ansvarig för denna incident?",
                            Title = "Cyberrånet mot Mersk"
                        },
                        new
                        {
                            Id = 11,
                            ExplanationText = " Cyberspionage avser aktiviteter där aktörer, ofta statliga, engagerar sig i övervakning och datainsamling genom cybermedel för att erhålla hemlig information utan målets medgivande, typiskt för politiska, militära eller ekonomiska fördelar.",
                            SubCategoryId = 36,
                            Text = "Regeringen upptäcker att känslig politisk kommunikation har läckt och misstänker elektronisk övervakning. Vilket fenomen beskriver bäst denna situation?",
                            Title = "Allmänt om cyberspionage"
                        },
                        new
                        {
                            Id = 12,
                            ExplanationText = "Riktade cyberattacker som utnyttjar noll-dagars Zero-day sårbarheter är en avancerad metod för cyberspionage där angriparen specifikt riktar in sig på ett mål för att komma åt känslig information eller data genom att utnyttja tidigare okända sårbarheter i programvara.",
                            SubCategoryId = 37,
                            Text = "Regeringen blir varse om en sofistikerad skadeprogramskampanj som utnyttjar Zero-day sårbarheter för att infiltrera deras nätverk och stjäla oerhört viktig data. Vilken metod för cyberspionage används sannolikt här?",
                            Title = "Metoder för cyberspionage"
                        },
                        new
                        {
                            Id = 13,
                            ExplanationText = "Säkerhetsskyddslagen är en svensk lagstiftning som syftar till att skydda nationellt känslig information från spioneri, sabotage, terroristbrott och andra säkerhetshot. Lagen ställer krav på säkerhetsskyddsåtgärder för verksamheter av betydelse för Sveriges säkerhet.",
                            SubCategoryId = 38,
                            Text = "Regeringen i Sverige ökar sitt interna säkerhetsprotokoll för att skydda sig mot utländska underrättelsetjänsters infiltration. Vilken lagstiftning ger ramverket för detta skydd?",
                            Title = "Säkerhetsskyddslagen"
                        },
                        new
                        {
                            Id = 14,
                            ExplanationText = "Lunds universitet upptäcker att forskningsdata om ny teknologi har stulits. Undersökningar tyder på en välorganiserad grupp med kopplingar till en utländsk stat. Vilken typ av aktör ligger sannolikt bakom detta?",
                            SubCategoryId = 39,
                            Text = "Statssponsrade hackers är aktörer som arbetar på uppdrag av eller med stöd från en regering för att genomföra cyberspionage, ofta riktat mot utländska intressen, organisationer eller regeringar för att få strategiska fördelar.",
                            Title = "Cyberspionagets aktörer"
                        },
                        new
                        {
                            Id = 15,
                            ExplanationText = "Det säkraste sättet att hantera potentiella telefonbedrägerier är att avsluta samtalet och sedan själv ringa upp din bank via ett telefonnummer du vet är korrekt (till exempel från deras officiella webbplats eller ditt bankkort) för att verifiera om samtalet var legitimt.",
                            SubCategoryId = 1,
                            Text = "Vad bör du göra omedelbart efter att ha mottagit ett misstänkt telefonsamtal där någon frågar efter personlig finansiell information?",
                            Title = "Kreditkortsbedrägeri"
                        },
                        new
                        {
                            Id = 16,
                            ExplanationText = "Kommunikationen från banker och finansiella institutioner innehåller aldrig förfrågningar om känslig information som lösenord eller kontonummer via osäkra kanaler som telefon eller e-post. Detta är en grundläggande säkerhetsprincip.",
                            SubCategoryId = 1,
                            Text = "Vilket av följande påståenden är sant angående hur finansiella institutioner kommunicerar med sina kunder?",
                            Title = "Kreditkortsbedrägeri"
                        },
                        new
                        {
                            Id = 17,
                            ExplanationText = "Genom att ha förutbestämda säkerhetsfrågor med din bank kan du och banken ha en säker metod för att bekräfta varandras identitet under telefonsamtal. Detta minskar risken för att bli lurad av bedragare som inte kan svara på dessa frågor.",
                            SubCategoryId = 1,
                            Text = "Hur kan du bäst skydda dig mot telefonbedrägerier?",
                            Title = "Kreditkortsbedrägeri"
                        },
                        new
                        {
                            Id = 18,
                            ExplanationText = "En automatisk policy för lösenordsändring tvingar fram regelbundna uppdateringar och säkerställer att lösenorden hålls starka och svåra att knäcka, vilket minskar risken för obehörig åtkomst.",
                            SubCategoryId = 12,
                            Text = "Vilken åtgärd är mest effektiv för att säkerställa att anställda regelbundet uppdaterar sina lösenord till starkare och mer komplexa versioner?",
                            Title = "Digital säkerhet på företag"
                        },
                        new
                        {
                            Id = 19,
                            ExplanationText = "Genom att använda VPN kan anställda säkert ansluta till företagets nätverk även från otrygga Wi-Fi-nätverk, vilket krypterar dataöverföring och skyddar mot avlyssning och andra cyberhot.",
                            SubCategoryId = 12,
                            Text = "Hur kan företaget effektivt minska risken för att anställda oavsiktligt exponerar företagsdata via otrygga Wi-Fi-nätverk?",
                            Title = "Digital säkerhet på företag"
                        },
                        new
                        {
                            Id = 20,
                            ExplanationText = "Avancerade e-postsäkerhetslösningar kan effektivt identifiera och blockera skadlig programvara och phishing-försök, vilket minskar risken för att anställda oavsiktligt exponerar företagets system och data för cyberhot.",
                            SubCategoryId = 12,
                            Text = "Vilken åtgärd bör ett företag ta för att skydda sig mot intrång via e-postbaserade hot som phishing?",
                            Title = "Digital säkerhet på företag"
                        },
                        new
                        {
                            Id = 21,
                            ExplanationText = "Kryptering är en kraftfull metod för att skydda känslig information under överföring och lagring, vilket gör det extremt svårt för obehöriga att få tillgång till och förstå informationen, även om de lyckas avlyssna kommunikationen.\nInsiderhot är en av de svåraste säkerhetsutmaningarna att identifiera och förebygga. Dessa hot kan komma från anställda som, oavsett om det är avsiktligt eller oavsiktligt, läcker känslig information som kan utnyttjas för cyberspionage. Att använda avancerade verktyg för beteendeanalys och anomalidetektering kan ge tidiga varningar om potentiella säkerhetsbrott.",
                            SubCategoryId = 36,
                            Text = "Vilken försvarsstrategi är mest effektiv mot cyberspionage som riktar sig mot känslig kommunikation?",
                            Title = "Allmänt om cyberspionage"
                        },
                        new
                        {
                            Id = 22,
                            ExplanationText = "Program för beteendeanalys och anomalidetektering kan effektivt identifiera ovanligt beteende eller aktiviteter som kan tyda på insiderhot eller obehörig åtkomst till känslig information, vilket är ett kritiskt steg för att förhindra cyberspionage.\nMjukvarusårbarheter är ofta den svaga länken som utnyttjas i cyberspionageattacker. Utan snabba och regelbundna säkerhetsuppdateringar och patchar, kan dessa sårbarheter lämna dörrarna vidöppna för angripare. Att hålla programvara och system uppdaterade är en grundläggande men kritisk del av ett effektivt cybersäkerhetsförsvar.",
                            SubCategoryId = 36,
                            Text = "Hur kan organisationer bäst upptäcka och motverka insiderhot som bidrar till cyberspionage?",
                            Title = "Allmänt om cyberspionage"
                        },
                        new
                        {
                            Id = 23,
                            ExplanationText = "Regelbundna uppdateringar och patchning av mjukvara och operativsystem är avgörande för att stänga säkerhetshål som annars kan utnyttjas av cyberspioner. Detta minskar risken för intrång och dataläckor avsevärt.",
                            SubCategoryId = 36,
                            Text = "Vilken åtgärd är viktigast för att skydda sig mot cyberspionage genom utnyttjande av mjukvarusårbarheter?",
                            Title = "Allmänt om cyberspionage"
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.ResponseModel", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAnsweredCorrectly")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.SegmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("InfoText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Segments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Del 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Del 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Del 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Del 1"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Del 2"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Del 3"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "Del 4"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Name = "Del 1"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Name = "Del 2"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Name = "Del 3"
                        });
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.SubCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfoText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SegmentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SegmentId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SegmentId = 1,
                            Title = "Kreditkortsbedrägeri"
                        },
                        new
                        {
                            Id = 2,
                            SegmentId = 1,
                            Title = "Romansbedrägeri"
                        },
                        new
                        {
                            Id = 3,
                            SegmentId = 1,
                            Title = "Investeringsbedrägeri"
                        },
                        new
                        {
                            Id = 4,
                            SegmentId = 1,
                            Title = "Telefonbedrägeri"
                        },
                        new
                        {
                            Id = 5,
                            SegmentId = 2,
                            Title = "Bedrägerier i hemmet"
                        },
                        new
                        {
                            Id = 6,
                            SegmentId = 2,
                            Title = "Identitetsstöld"
                        },
                        new
                        {
                            Id = 7,
                            SegmentId = 2,
                            Title = "Nätfiske och bluffmejl"
                        },
                        new
                        {
                            Id = 8,
                            SegmentId = 2,
                            Title = "Investeringsbedrägeri på nätet"
                        },
                        new
                        {
                            Id = 9,
                            SegmentId = 3,
                            Title = "Abonnemangsfällor och falska fakturor"
                        },
                        new
                        {
                            Id = 10,
                            SegmentId = 3,
                            Title = "Ransomware"
                        },
                        new
                        {
                            Id = 11,
                            SegmentId = 3,
                            Title = "Statistik och förhållningssätt"
                        },
                        new
                        {
                            Id = 12,
                            SegmentId = 4,
                            Title = "Digital säkerhet på företag"
                        },
                        new
                        {
                            Id = 13,
                            SegmentId = 4,
                            Title = "Risker och beredskap"
                        },
                        new
                        {
                            Id = 14,
                            SegmentId = 4,
                            Title = "Aktörer inom cyberbrott"
                        },
                        new
                        {
                            Id = 15,
                            SegmentId = 4,
                            Title = "Ökad digital närvaro och distansarbete"
                        },
                        new
                        {
                            Id = 16,
                            SegmentId = 4,
                            Title = "Cyberangrepp mot känsliga sektorer"
                        },
                        new
                        {
                            Id = 17,
                            SegmentId = 4,
                            Title = "Cyberrånet mot Mersk"
                        },
                        new
                        {
                            Id = 18,
                            SegmentId = 5,
                            Title = "Social engineering"
                        },
                        new
                        {
                            Id = 19,
                            SegmentId = 5,
                            Title = "Nätfiske och skräppost"
                        },
                        new
                        {
                            Id = 20,
                            SegmentId = 5,
                            Title = "Vishing"
                        },
                        new
                        {
                            Id = 21,
                            SegmentId = 5,
                            Title = "Varning för vishing"
                        },
                        new
                        {
                            Id = 22,
                            SegmentId = 5,
                            Title = "Identifiera VD-mejl"
                        },
                        new
                        {
                            Id = 23,
                            SegmentId = 5,
                            Title = "Öneangreoo och presentkortsbluffar"
                        },
                        new
                        {
                            Id = 24,
                            SegmentId = 6,
                            Title = "Virus, maskar och trojaner"
                        },
                        new
                        {
                            Id = 25,
                            SegmentId = 6,
                            Title = "Så kan det gå till"
                        },
                        new
                        {
                            Id = 26,
                            SegmentId = 6,
                            Title = "Nätverksintrång"
                        },
                        new
                        {
                            Id = 27,
                            SegmentId = 6,
                            Title = "Dataintrång"
                        },
                        new
                        {
                            Id = 28,
                            SegmentId = 6,
                            Title = "Hackad!"
                        },
                        new
                        {
                            Id = 29,
                            SegmentId = 6,
                            Title = "Vägarna in"
                        },
                        new
                        {
                            Id = 30,
                            SegmentId = 7,
                            Title = "Utpressningsvirus"
                        },
                        new
                        {
                            Id = 31,
                            SegmentId = 7,
                            Title = "Attacker mot servrar"
                        },
                        new
                        {
                            Id = 32,
                            SegmentId = 7,
                            Title = "Cyberangrepp i Norden"
                        },
                        new
                        {
                            Id = 33,
                            SegmentId = 7,
                            Title = "It-brottslingarnas verktyg"
                        },
                        new
                        {
                            Id = 34,
                            SegmentId = 7,
                            Title = "Mirai, Wannacry och fallet Düsseldorf"
                        },
                        new
                        {
                            Id = 35,
                            SegmentId = 7,
                            Title = "De sårbara molnen"
                        },
                        new
                        {
                            Id = 36,
                            SegmentId = 8,
                            Title = "Allmänt om cyberspionage"
                        },
                        new
                        {
                            Id = 37,
                            SegmentId = 8,
                            Title = "Metoder för cyberspionage"
                        },
                        new
                        {
                            Id = 38,
                            SegmentId = 8,
                            Title = "Säkerhetsskyddslagen"
                        },
                        new
                        {
                            Id = 39,
                            SegmentId = 8,
                            Title = "Cyberspionagets aktörer"
                        },
                        new
                        {
                            Id = 40,
                            SegmentId = 9,
                            Title = "Värvningsförsök"
                        },
                        new
                        {
                            Id = 41,
                            SegmentId = 9,
                            Title = "Affärsspionage"
                        },
                        new
                        {
                            Id = 42,
                            SegmentId = 9,
                            Title = "Påverkanskampanjer"
                        },
                        new
                        {
                            Id = 43,
                            SegmentId = 10,
                            Title = "Svensk underrättelsetjänst och cyberförsvar"
                        },
                        new
                        {
                            Id = 44,
                            SegmentId = 10,
                            Title = "Signalspaning, informationssäkerhet och 5G"
                        },
                        new
                        {
                            Id = 45,
                            SegmentId = 10,
                            Title = "Samverkan mot cyberspionage"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValhallaVaultCyberAwareness.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.AnswerModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Models.QuestionModel", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.QuestionModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Models.SubCategoryModel", "SubCategory")
                        .WithMany("Questions")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.ResponseModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Models.QuestionModel", "Question")
                        .WithMany("Responses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ValhallaVaultCyberAwareness.Data.ApplicationUser", "User")
                        .WithMany("Responses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.SegmentModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Models.CategoryModel", "Category")
                        .WithMany("Segments")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.SubCategoryModel", b =>
                {
                    b.HasOne("ValhallaVaultCyberAwareness.Models.SegmentModel", "Segment")
                        .WithMany("SubCategories")
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Data.ApplicationUser", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.CategoryModel", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.QuestionModel", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.SegmentModel", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("ValhallaVaultCyberAwareness.Models.SubCategoryModel", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
